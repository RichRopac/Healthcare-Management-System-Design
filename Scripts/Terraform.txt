provider "azurerm" {
  version = "=3.0.0"
  features {}
}

resource "azurerm_resource_group" "integris_rg" {
  name     = "rg-integris-healthcare"
  location = "Oklahoma City"
}

resource "azurerm_virtual_network" "integris_vnet" {
  name                = "vnet-integris-healthcare"
  address_space       = ["10.0.0.0/16"]
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
}

resource "azurerm_subnet" "app_subnet" {
  name                 = "subnet-app-integris"
  resource_group_name  = azurerm_resource_group.integris_rg.name
  virtual_network_name = azurerm_virtual_network.integris_vnet.name
  address_prefixes     = ["10.0.1.0/24"]
}

resource "azurerm_subnet" "db_subnet" {
  name                 = "subnet-db-integris"
  resource_group_name  = azurerm_resource_group.integris_rg.name
  virtual_network_name = azurerm_virtual_network.integris_vnet.name
  address_prefixes     = ["10.0.2.0/24"]
}

resource "azurerm_network_security_group" "app_nsg" {
  name                = "nsg-app-integris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name

  security_rule {
    name                       = "SSH"
    priority                   = 1001
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
}

resource "azurerm_network_security_group" "db_nsg" {
  name                = "nsg-db-integris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name

  security_rule {
    name                       = "HTTPS"
    priority                   = 1001
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "443"
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
}

resource "azurerm_network_interface" "app_nic" {
  name                = "nic-app-integris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.app_subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}

resource "azurerm_network_interface" "db_nic" {
  name                = "nic-db-integris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.db_subnet.id
    private_ip_address_allocation = "Dynamic"
  }
}

resource "azurerm_linux_virtual_machine" "app_vm" {
  name                  = "vm-app-integris"
  location              = azurerm_resource_group.integris_rg.location
  resource_group_name   = azurerm_resource_group.integris_rg.name
  network_interface_ids = [azurerm_network_interface.app_nic.id]
  size                  = "Standard_DS1_v2"

  os_disk {
    name                = "appOsDisk"
    caching             = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  os_profile {
    computer_name  = "app-server"
    admin_username = "adminuser"
    admin_password = "Password1234!"
  }

  os_profile_linux_config {
    disable_password_authentication = false
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }
}

resource "azurerm_linux_virtual_machine" "db_vm" {
  name                  = "vm-db-integris"
  location              = azurerm_resource_group.integris_rg.location
  resource_group_name   = azurerm_resource_group.integris_rg.name
  network_interface_ids = [azurerm_network_interface.db_nic.id]
  size                  = "Standard_DS1_v2"

  os_disk {
    name                = "dbOsDisk"
    caching             = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  os_profile {
    computer_name  = "db-server"
    admin_username = "adminuser"
    admin_password = "Password1234!"
  }

  os_profile_linux_config {
    disable_password_authentication = false
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }
}

resource "azurerm_sql_server" "sql" {
  name                         = "sql-integris"
  resource_group_name          = azurerm_resource_group.integris_rg.name
  location                     = azurerm_resource_group.integris_rg.location
  version                      = "12.0"
  administrator_login          = "sqladmin"
  administrator_login_password = "Password1234!"
}

resource "azurerm_sql_database" "sqldb" {
  name                         = "sqldb-integris"
  resource_group_name          = azurerm_resource_group.integris_rg.name
  location                     = azurerm_resource_group.integris_rg.location
  server_name                  = azurerm_sql_server.sql.name
  edition                      = "Standard"
  requested_service_objective_name = "S1"
}

resource "azurerm_storage_account" "storage" {
  name                     = "storageaccountintegris"
  resource_group_name      = azurerm_resource_group.integris_rg.name
  location                 = azurerm_resource_group.integris_rg.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
}

resource "azurerm_storage_container" "storage_container" {
  name                  = "integris-container"
  storage_account_name  = azurerm_storage_account.storage.name
  container_access_type = "private"
}

resource "azurerm_key_vault" "keyvault" {
  name                = "keyvaultintegris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
  tenant_id           = data.azurerm_client_config.current.tenant_id
  sku_name            = "standard"

  soft_delete_retention_days = 7
  purge_protection_enabled   = true
}

resource "azurerm_bastion_host" "bastion" {
  name                = "bastionhostintegris"
  resource_group_name = azurerm_resource_group.integris_rg.name
  location            = azurerm_resource_group.integris_rg.location
  dns_name            = "bastionhostintegris"
  ip_configuration {
    name                 = "configuration"
    subnet_id            = azurerm_subnet.app_subnet.id
    public_ip_address_id = azurerm_public_ip.bastion.id
  }
}

resource "azurerm_public_ip" "bastion" {
  name                = "bastionpublicip"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
  allocation_method   = "Static"
  sku                 = "Standard"
}

resource "azurerm_application_gateway" "appgw" {
  name                = "appgatewayintegris"
  resource_group_name = azurerm_resource_group.integris_rg.name
  location            = azurerm_resource_group.integris_rg.location
  sku {
    name     = "Standard_v2"
    tier     = "Standard_v2"
    capacity = 2
  }

  gateway_ip_configuration {
    name      = "configuration"
    subnet_id = azurerm_subnet.db_subnet.id
  }

  frontend_port {
    name = "frontendport"
    port = 80
  }

  frontend_ip_configuration {
    name                 = "frontend"
    public_ip_address_id = azurerm_public_ip.appgw.id
  }

  backend_address_pool {
    name = "backendpool"
  }

  http_settings {
    name                  = "http_settings"
    cookie_based_affinity = "Disabled"
    port                  = 80
    protocol              = "Http"
    request_timeout       = 20
  }

  listener {
    name                           = "listener"
    frontend_ip_configuration_name = "frontend"
    frontend_port_name             = "frontendport"
    protocol                       = "Http"
  }

  routing_rule {
    name                       = "routingrule"
    rule_type                  = "Basic"
    http_listener_name         = "listener"
    backend_address_pool_name  = "backendpool"
    backend_http_settings_name = "http_settings"
  }
}

resource "azurerm_public_ip" "appgw" {
  name                = "appgwpublicip"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
  allocation_method   = "Static"
  sku                 = "Standard"
}

resource "azurerm_firewall" "firewall" {
  name                = "firewallintegris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
  sku                 = "AZFW_VNet"
  threat_intel_mode   = "Alert"

  ip_configuration {
    name                 = "configuration"
    subnet_id            = azurerm_subnet.db_subnet.id
    public_ip_address_id = azurerm_public_ip.firewall.id
  }
}

resource "azurerm_public_ip" "firewall" {
  name                = "firewallpublicip"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
  allocation_method   = "Static"
  sku                 = "Standard"
}

resource "azurerm_monitor_diagnostic_setting" "monitor" {
  name               = "monitor"
  target_resource_id = azurerm_firewall.firewall.id
  log_analytics_workspace_id = azurerm_log_analytics_workspace.law.id

  log {
    category = "FirewallPolicy"
    enabled  = true
    retention_policy {
      enabled = true
      days    = 30
    }
  }
}


resource "azurerm_log_analytics_workspace" "law" {
  name                = "loganalyticsintegris"
  location            = azurerm_resource_group.integris_rg.location
  resource_group_name = azurerm_resource_group.integris_rg.name
  sku                 = "PerGB2018"
}
